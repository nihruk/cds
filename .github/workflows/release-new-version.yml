name: Release new version

on:
  workflow_dispatch:
    inputs:
      version_number:
        description: 'Version number (Semantic Versioning 2: https://semver.org/)'
        required: true
        type: string
      commit:
        description: 'Hash of the commit to release'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the source code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.commit }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: Configure Git
        run: |
          git config user.email 'enquiries@nihr.ac.uk'
          git config user.name 'NIHR'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY

      - name: Update package.json with the version number
        run: |
          cat ./package.json | VERSION='${{ inputs.version_number }}' jq '.version=$ENV.VERSION' | tee ./package.json

      - name: Commit and push the changes
        # Create a release branch, so we do not pollute the original branch with the release commit.
        run: |
          git checkout -b v${{ inputs.version_number }}-release
          git add package.json
          git commit -m "Release version v${{ inputs.version_number }}"
          git push origin/v${{ inputs.version_number }}-release

      - name: Determine the release commit hash
        run: |
          echo "release_tag=$(git log -n 1 --pretty=tformat:"%H")" >> $GITHUB_ENV

      - name: Create the release
        run: |
          gh release create --target ${{ env.release_tag }} v${{ inputs.version_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push the npm package
        run: |
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}
